{"version":3,"sources":["ng://cc-lib/lib/modules/footer/footer.component.ts","ng://cc-lib/lib/modules/header/header-logo.directive.ts","ng://cc-lib/lib/modules/header/header-menu.directive.ts","ng://cc-lib/lib/modules/header/header-profile.directive.ts","ng://cc-lib/lib/modules/header/header.component.ts","ng://cc-lib/lib/modules/login/login.component.ts","ng://cc-lib/lib/modules/left-sidebar/left-sidebar.component.ts","ng://cc-lib/lib/cc-lib.module.ts"],"names":["FooterComponent","prototype","ngOnInit","Component","args","selector","template","Input","NgHeaderLogo","Directive","TemplateRef","templateRef","this","NgHeaderMenu","NgHeaderProfile","HeaderComponent","ngAfterContentChecked","menuTemplate","menus","first","logoTemplate","logos","profileTemplate","profiles","ContentChildren","LoginComponent","loginForm","formBuider","group","userName","Validators","required","password","Object","defineProperty","controls","onSubmit","submitted","invalid","login","emit","value","onLoggedin","localStorage","setItem","Router","FormBuilder","Output","router","EventEmitter","LeftSidebarComponent","isActive","collapsed","showMenu","pushRightClass","isToggled","document","querySelector","classList","contains","toggleCollapsed","collapsedEvent","toggleSidebar","toggle","_this","events","subscribe","val","NavigationEnd","window","innerWidth","CcLibModule","NgModule","declarations","imports","CommonModule","FormsModule","NgbModalModule","NgbModule","RouterModule","ReactiveFormsModule","exports","bootstrap"],"mappings":"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","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'cc-lib-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  /**\n   * title input as string content\n   *\n   */\n  @Input() title: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n  Directive,\n  TemplateRef\n} from '@angular/core';\n\n@Directive({selector: 'ng-template[ngHeaderLogo]'})\nexport class NgHeaderLogo {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import {\n  Directive,\n  TemplateRef\n} from '@angular/core';\n\n@Directive({selector: 'ng-template[ngHeaderMenu]'})\nexport class NgHeaderMenu {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import {\n  Directive,\n  TemplateRef\n} from '@angular/core';\n\n@Directive({selector: 'ng-template[ngHeaderProfile]'})\nexport class NgHeaderProfile {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import {Component, AfterContentChecked, ContentChildren, QueryList} from '@angular/core';\n\nimport { NgHeaderLogo} from './header-logo.directive';\nimport { NgHeaderMenu} from './header-menu.directive';\nimport { NgHeaderProfile} from './header-profile.directive';\n\n@Component({\n  selector: 'cc-lib-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements AfterContentChecked {\n\n  @ContentChildren(NgHeaderMenu) menus: QueryList<NgHeaderMenu>;\n  @ContentChildren(NgHeaderLogo) logos: QueryList<NgHeaderLogo>;\n  @ContentChildren(NgHeaderProfile) profiles: QueryList<NgHeaderProfile>;\n\n  menuTemplate: NgHeaderMenu | null;\n  logoTemplate: NgHeaderLogo | null;\n  profileTemplate: NgHeaderProfile | null;\n\n  ngAfterContentChecked() {\n    this.menuTemplate = this.menus.first;\n    this.logoTemplate = this.logos.first;\n    this.profileTemplate = this.profiles.first;\n  }\n\n}\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'cc-lib-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    public router: Router, private formBuider: FormBuilder\n  ) {}\n\n  loginForm: FormGroup;\n  @Input() userName = '';\n  @Input() password = '';\n  @Input() submitted = false;\n  @Output() login = new EventEmitter<any>();\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuider.group(\n      {\n        userName: ['', Validators.required],\n        password: ['', Validators.required]\n      }\n    );\n  }\n  get helperFunction() {\n    return this.loginForm.controls;\n  };\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.login.emit({userName: this.loginForm.controls.userName.value,\n      password: this.loginForm.controls.password.value });\n  }\n  onLoggedin() {\n    localStorage.setItem('isLoggedin', 'true');\n  }\n}\n","import {Component, Output, EventEmitter, OnInit, Input} from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport {Menu} from '../../interfaces/interfaces';\n\n@Component({\n  selector: 'cc-lib-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss']\n})\nexport class LeftSidebarComponent implements OnInit {\n  @Input() title: string;\n  @Input() menuSettings: Menu;\n  isActive: boolean;\n  collapsed: boolean;\n  showMenu: string;\n  pushRightClass: string;\n\n  @Output() collapsedEvent = new EventEmitter<boolean>();\n\n  constructor(public router: Router) {\n    this.router.events.subscribe(val => {\n      if (\n        val instanceof NavigationEnd &&\n        window.innerWidth <= 992 &&\n        this.isToggled()\n      ) {\n        this.toggleSidebar();\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.isActive = false;\n    this.collapsed = false;\n    this.showMenu = '';\n    this.pushRightClass = 'push-right';\n  }\n\n  isToggled(): boolean {\n    const dom: Element = document.querySelector('body');\n    return dom.classList.contains(this.pushRightClass);\n  }\n\n  toggleCollapsed() {\n    this.collapsed = !this.collapsed;\n    this.collapsedEvent.emit(this.collapsed);\n  }\n\n  toggleSidebar() {\n    const dom: any = document.querySelector('body');\n    dom.classList.toggle(this.pushRightClass);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModalModule} from '@ng-bootstrap/ng-bootstrap';\nimport { FooterComponent } from './modules/footer/footer.component';\nimport { HeaderComponent } from './modules/header/header.component';\nimport { LoginComponent } from './modules/login/login.component';\nimport { LeftSidebarComponent } from './modules/left-sidebar/left-sidebar.component';\nimport { RouterModule } from '@angular/router';\nimport { NgHeaderProfile } from './modules/header/header-profile.directive';\nimport { NgHeaderLogo } from './modules/header/header-logo.directive';\nimport { NgHeaderMenu } from './modules/header/header-menu.directive';\n\n@NgModule({\n  declarations: [\n    FooterComponent,\n    HeaderComponent,\n    LoginComponent,\n    LeftSidebarComponent,\n    NgHeaderProfile,\n    NgHeaderLogo,\n    NgHeaderMenu,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModalModule,\n    NgbModule,\n    RouterModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    FooterComponent,\n    HeaderComponent,\n    LoginComponent,\n    LeftSidebarComponent,\n    NgHeaderProfile,\n    NgHeaderLogo,\n    NgHeaderMenu,\n  ],\n  bootstrap: [\n    HeaderComponent,\n    LeftSidebarComponent,\n    FooterComponent\n  ]\n})\nexport class CcLibModule { }\n"]}